# -*- coding: utf-8 -*-
"""Decision_Tree

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zj0EwRK497yjvGsCr7Se9_xFXGspu3OL
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.tree import DecisionTreeClassifier
from sklearn.tree import plot_tree
from sklearn.model_selection import train_test_split

#Import Necessary File
from google.colab import files
uploaded = files.upload()

#Create Dataframe
netflix_df = pd.read_csv('netflix_titles.csv')

#Isolate Units of Duration Series
c = 0
for x in netflix_df['duration']:
  k, v = x.split()
  j.append(v)
  netflix_df['duration'][c] = v
  c += 1

#Create Useful Variables
type = netflix_df['type']
one_hot_predictor = pd.get_dummies(netflix_df[['listed_in', 'duration']], drop_first = True)
predictor_train, predictor_cv, type_train, type_cv = train_test_split(one_hot_predictor, type, test_size = 0.20)
predictor_cv, predictor_test, type_cv, type_test = train_test_split(predictor_cv, type_cv, test_size = 0.50)

#Used for Tuning Hyperparameters
x = []
for i in range(1, 101, 5):
  tree = DecisionTreeClassifier(min_samples_leaf = i)
  tree.fit(predictor_train, genre_train)
  x.append(tree.score(predictor_cv, genre_cv))
print(x)

#Create and Fit Model
tree = DecisionTreeClassifier(max_depth = 9, min_samples_leaf = 36)
clf = tree.fit(predictor_train, type_train)

#Test Model
tree.score(predictor_test, type_test)

#Plot Tree
plot_tree(clf)
